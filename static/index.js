var my_textarea = document.getElementById("sourceCodeTextarea");
var editor = CodeMirror.fromTextArea(my_textarea, {lineNumbers: true, mode:"python", smartIndent: true});

$("#compile").click(function() {
    $.ajax({
        url: "/bytecode",
        data: {sourceCode: editor.getValue()},
        dataType: "json", 
        method: "POST",
        success: function(data){
	    addBytecode(data);
            // this comes from the tooltip.js script
	    registerTooltips();    
	}
    });
});

function addBytecode(data) {
    // the data object is ultimately generated by the source_code_to_bytecode function in bitten.py
    if (typeof data !== "string") {
        if (data.length > 0) {
            // clear the error box
            $("#syntaxError").text("");
            // remove the previous bytecode table, if it existed
            $("#bytecodeTable").detach();
            $("#tableColumn").append(makeTable(data));
        }
    } else {
        $("#syntaxError").text(data);
    }
}

function makeTable(data) {
    return '<table class="table table-hover" id="bytecodeTable"><thead><tr><th>Source Code</th><th>Opname</th><th>Argument Index</th><th>Argument</th></tr></thead><tbody>' + makeTableBody(data) + '</tbody></table>';
}

function makeTableBody(data) {
    return data.map(rowsFromCodePack).join("");
}

function rowsFromCodePack(code) {
    var firstRow = makeTableRow(code.source, code.bytecode[0]);
    var otherRows = code.bytecode.slice(1).map(function (b) { return makeTableRow('', b); });
    return firstRow + otherRows.join("");
}

function makeTableRow(source, bytecode) {
    if (bytecode) {
        return '<tr><td>' + source + '</td><td>' + bytecode.opname + '</td><td>' + bytecode.arg + '</td><td>' + bytecode.argrepr + '</td></tr>';
    } else {
        return '<tr><td>' + source + '</td><td></td><td></td><td></td></tr>';
    }
}
