var my_textarea = document.getElementById("sourceCodeTextarea");
var editor = CodeMirror.fromTextArea(my_textarea, {lineNumbers: true, mode:"python", smartIndent: true});

$("#compile").click(function() {
    $.ajax({
        url: "/bytecode",
        data: {sourceCode: editor.getValue()},
        dataType: "json", 
        method: "POST",
        success: function(data){
	    addBytecode(data);
	    register_tooltips();    
	}
    });
});

function addBytecode(data) {
    // the data object is ultimately generated by the source_code_to_bytecode function in bitten.py
    if (typeof data !== "string") {
        if (data.length > 0) {
            // clear the error box
            $("#syntaxError").text("");
            // remove the previous bytecode table, if it existed
            $("#bytecodeTable").detach();
            var tab = makeTable(data);
            console.log(tab);
            $("#tableColumn").append(tab);
        }
    } else {
        $("#syntaxError").text(data);
    }
}

function makeTable(data) {
    return '<table class="table table-hover" id="bytecodeTable"><thead><tr><th>Source Code</th><th>Opname</th><th>Argument Index</th><th>Argument</th></tr></thead><tbody>' + makeTableBody(data) + '</tbody></table>';
}

function makeTableBody(data) {
    return data.map(rowsFromCodePack).join("");
}

function rowsFromCodePack(code) {
    var firstRow = makeTableRow(code.source, code.bytecode[0]);
    var otherRows = code.bytecode.slice(1).map(function (b) { return makeTableRow('', b); });
    return firstRow + otherRows.join("");
}

function makeTableRow(source, bytecode) {
    if (bytecode) {
        return '<tr><td>' + source + '</td><td>' + bytecode.opname + '</td><td>' + bytecode.arg + '</td><td>' + bytecode.argrepr + '</td></tr>';
    } else {
        return '<tr><td>' + source + '</td><td></td><td></td><td></td></tr>';
    }
}

/*
function addBytecode(data) {
    // the data object is ultimately generated by the source_code_to_bytecode function in bitten.py
    if (typeof data !== "string") {
        if (data.length > 0) {
            // clear the error box
            $("#syntaxError").text("");
            // remove all previous bytecode elements
            $("#bytecode-table").detach();
	    // create row, col, table
	    var row = document.createElement("div");
	    row.setAttribute("class", "row bytecode-row justify-content-center");
	    var col = document.createElement("div");
	    col.setAttribute("class", "col-md-6");
	    var table = document.createElement("table");
	    table.id="bytecode-table";
	    table.setAttribute("class", "table table-hover");
	    col.appendChild(table);
	    row.appendChild(col);
	    $("#mainContainer").append(row);
	    document.getElementById("bytecode-table").innerHTML='<thead><tr><th>Source Code</th><th>Opname</th><th>Argument Index</th><th>Argument</th></tr></thead>';
	    var body = document.createElement("tbody");
	    body.id = "tableBody";
	    table.append(body);
            for (var i = 0; i < data.length; i++) {
                createBytecodeRow(data[i]);
            }
        }
    } else {
        $("#syntaxError").text(data);
    }
}

function createBytecodeRow(codeObj) {
    // I hope there's a better way to do this
    // table.appendChild(content);
    var tablerow =  document.createElement("tr");
    var source = document.createElement("td");
    var opname = document.createElement("td");
    var arg = document.createElement("td");
    var argrepr = document.createElement("td");
    source.setAttribute("scope", "row");
    source.innerHTML = codeObj.source;
    if (codeObj.bytecode.length > 0) {
        opname.innerHTML = codeObj.bytecode[0].opname;
        opname.setAttribute("class", codeObj.bytecode[0].opname);
        arg.innerHTML = codeObj.bytecode[0].arg;
        argrepr.innerHTML = codeObj.bytecode[0].argrepr;
    }
    tablerow.append(source);
    tablerow.append(opname);
    tablerow.append(arg);
    tablerow.append(argrepr);
    $("#tableBody").append(tablerow);
    for (var i = 1; i <codeObj.bytecode.length; i++) {
	var extraTablerow = document.createElement("tr");
	var extraOpname = document.createElement("td");
	var extraArg = document.createElement("td");
	var extraArgrepr = document.createElement("td");
	extraOpname.setAttribute("class", codeObj.bytecode[i].opname);
	extraOpname.innerHTML = codeObj.bytecode[i].opname;
	extraArg.innerHTML = codeObj.bytecode[i].arg;
	extraArgrepr.innerHTML = codeObj.bytecode[i].arg;
	extraTablerow.append(document.createElement("td"));
	extraTablerow.append(extraOpname);
	extraTablerow.append(extraArg);
	extraTablerow.append(extraArgrepr);
	$("#tableBody").append(extraTablerow);

	$("#tableBody").append(extraTablerow);
    }
    return tablerow;
}
*/
